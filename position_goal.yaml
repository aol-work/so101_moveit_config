# position_goal.yaml  – plan-only request that reproduces the pose
# found with /compute_ik.  It relies on the CURRENT joint state
# (start_state.is_diff: true) and therefore works from any pose the
# robot is already in.

request:
  group_name: arm                    # planning group
  num_planning_attempts: 5           # try several times in 5 s
  allowed_planning_time: 5.0         # total time budget [s]
  workspace_parameters:
    header:      {frame_id: base}
    min_corner:  {x: -0.6, y: -0.6, z: -1.0}
    max_corner:  {x:  0.6, y:  0.6, z: 1.0}

  # Let MoveIt copy the live state of the robot
  start_state:
    is_diff: true

  # --- goal pose --------------------------------------------------------
  goal_constraints:
  - position_constraints:
    - header: {frame_id: base}
      link_name: gripper
      target_point_offset: {x: 0.0, y: 0.0, z: 0.0}
      constraint_region:
        primitives:
        - type: 1                    # BOX
          dimensions: [0.02, 0.02, 0.02]   # 2 cm cube
        primitive_poses:
        - position:
            x:  0.02061531359527537
            y: -0.27747322066685803
            z:  0.26685202775059064
          orientation: {w: 1.0}      # orientation free here
      weight: 1.0

    orientation_constraints:
    - header: {frame_id: base}
      link_name: gripper
      orientation:
        x: -0.49999951363112705
        y: -0.5000036497428465
        z: -0.4999949765360449
        w:  0.5000018600477311
      absolute_x_axis_tolerance: 0.01   # ≈ 0.57 °
      absolute_y_axis_tolerance: 0.01
      absolute_z_axis_tolerance: 0.01
      weight: 1.0
  # ---------------------------------------------------------------------

  # Omitted fields (workspace_parameters, path_constraints, …)
  # will be filled with their defaults by ros2 CLI.

planning_options:
  plan_only: true                   # set false to execute automatically
  planning_scene_diff:
    is_diff: true                   # apply on top of current scene
